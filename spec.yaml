openapi: 3.0.3
info:
  title: ShortURL Service API
  description: API for managing URL shortening, user authentication, and URL redirection.
  version: "0.0.1"
servers:
  - url: http://localhost:8080/
paths:
  /{id}:
    get:
      summary: Redirects to the original URL based on the short URL key.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The short URL key.
      responses:
        '302':
          description: Success. Redirecting to the original URL.
        '404':
          description: Not found.
  /auth/login:
    post:
      summary: Authenticates a user and returns a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success. Returns a token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
  /auth/register:
    post:
      summary: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created.
        '400':
          description: Bad request.
  /api/v1/shorten:
    post:
      summary: Shortens a given URL.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortenRequest'
      responses:
        '201':
          description: Created. Returns the shortened URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortenResponse'
        '400':
          description: Bad request.
  /api/v1/shorten/{id}:
    delete:
      summary: Disables a shortened URL.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The short URL key to disable.
      responses:
        '200':
          description: Success. URL disabled.
        '400':
          description: Bad request.
        '404':
          description: Not found.
  /api/v1/urls/:
    get:
      summary: Retrieves all URLs for the authenticated user.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success. Returns a list of URLs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/URLResponse'
        '404':
          description: Not found.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    ShortenRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
        - url
    ShortenResponse:
      type: object
      properties:
        key:
          type: string
    URLResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        created_at:
          type: string
          format: date-time
        last_accessed:
          type: string
          format: date-time
        access_count:
          type: integer
